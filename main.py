import os
import json
import datetime
from collections import defaultdict
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, MessageHandler, ContextTypes, filters
from threading import Thread
from flask import Flask

# üîß –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø
BOT_TOKEN = os.environ.get("BOT_TOKEN", "8378526693:AAFOwAb6pVp1GOE0tXZN4PDLFnD_TTT1djg")
GAME_COST = 5

# üé∞ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –í–°–ï–• –ò–ì–† –° –ü–û–õ–ù–´–ú–ò –†–ï–ó–£–õ–¨–¢–ê–¢–ê–ú–ò
GAMES_CONFIG = {
    "üé∞": {
        "cost": 5,
        "values": {
            # –í–´–ò–ì–†–´–®–ù–´–ï –ö–û–ú–ë–ò–ù–ê–¶–ò–ò (–æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã —Ç–æ–±–æ–π)
            1: {"win": True, "prize": 15, "message": "üé∞ –¢–†–ò –ë–ê–†–ê! –í—ã–∏–≥—Ä—ã—à: 15 –∑–≤–µ–∑–¥"},
            22: {"win": True, "prize": 25, "message": "üé∞ –¢–†–ò –í–ò–®–ù–ò! –í—ã–∏–≥—Ä—ã—à: 25 –∑–≤–µ–∑–¥"},
            43: {"win": True, "prize": 50, "message": "üé∞ –¢–†–ò –õ–ò–ú–û–ù–ê! –í—ã–∏–≥—Ä—ã—à: 50 –∑–≤–µ–∑–¥"},
            64: {"win": True, "prize": 100, "message": "üé∞ –î–ñ–ï–ö–ü–û–¢ 777! –í—ã–∏–≥—Ä—ã—à: 100 –∑–≤–µ–∑–¥"},
            # –ü–†–û–ò–ì–†–´–®–ù–´–ï –ö–û–ú–ë–ò–ù–ê–¶–ò–ò (–≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è)
            **{i: {"win": False, "prize": 0, "message": f"üé∞ –ö–æ–º–±–∏–Ω–∞—Ü–∏—è #{i} - –ù–µ –ø–æ–≤–µ–∑–ª–æ..."} for i in range(1, 65) if i not in [1, 22, 43, 64]}
        }
    },
    "üéØ": {
        "cost": 5,
        "values": {
            # –î–∞—Ä—Ç—Å: 1-6, –≥–¥–µ 6 - –ø–æ–±–µ–¥–∞
            1: {"win": False, "prize": 0, "message": "üéØ –ú–∏–º–æ —Ü–µ–ª–∏... –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ!"},
            2: {"win": False, "prize": 0, "message": "üéØ –ë–ª–∏–∑–∫–æ, –Ω–æ –Ω–µ –ø–æ–ø–∞–ª!"},
            3: {"win": False, "prize": 0, "message": "üéØ –ü–æ—á—Ç–∏ —É —Ü–µ–ª–∏!"},
            4: {"win": False, "prize": 0, "message": "üéØ –†—è–¥–æ–º —Å –º–∏—à–µ–Ω—å—é!"},
            5: {"win": False, "prize": 0, "message": "üéØ –ó–∞–¥–µ–ª –∫—Ä–∞–π –º–∏—à–µ–Ω–∏!"},
            6: {"win": True, "prize": 15, "message": "üéØ –ü–û–ü–ê–î–ê–ù–ò–ï –í –¶–ï–õ–¨! –í—ã–∏–≥—Ä—ã—à: 15 –∑–≤–µ–∑–¥"}
        }
    },
    "üé≤": {
        "cost": 5,
        "values": {
            # –ö–æ—Å—Ç–∏: 1-6, –≥–¥–µ 6 - –ø–æ–±–µ–¥–∞
            1: {"win": False, "prize": 0, "message": "üé≤ –í—ã–ø–∞–ª–∞ 1... –ù–µ –ø–æ–≤–µ–∑–ª–æ!"},
            2: {"win": False, "prize": 0, "message": "üé≤ –í—ã–ø–∞–ª–∞ 2... –ü–æ—á—Ç–∏!"},
            3: {"win": False, "prize": 0, "message": "üé≤ –í—ã–ø–∞–ª–∞ 3... –£–∂–µ –ª—É—á—à–µ!"},
            4: {"win": False, "prize": 0, "message": "üé≤ –í—ã–ø–∞–ª–∞ 4... –ë–ª–∏–∑–∫–æ!"},
            5: {"win": False, "prize": 0, "message": "üé≤ –í—ã–ø–∞–ª–∞ 5... –ï—â–µ —á—É—Ç—å-—á—É—Ç—å!"},
            6: {"win": True, "prize": 15, "message": "üé≤ –í–´–ü–ê–õ–û 6! –í—ã–∏–≥—Ä—ã—à: 15 –∑–≤–µ–∑–¥"}
        }
    },
    "üé≥": {
        "cost": 5,
        "values": {
            # –ë–æ—É–ª–∏–Ω–≥: 1-6, –≥–¥–µ 6 - —Å—Ç—Ä–∞–π–∫
            1: {"win": False, "prize": 0, "message": "üé≥ –í—Å–µ–≥–æ 1 –∫–µ–≥–ª—è... –ù–µ—É–¥–∞—á–∞!"},
            2: {"win": False, "prize": 0, "message": "üé≥ 2 –∫–µ–≥–ª–∏... –ú–æ–≥–ª–æ –±—ã—Ç—å –ª—É—á—à–µ!"},
            3: {"win": False, "prize": 0, "message": "üé≥ 3 –∫–µ–≥–ª–∏... –ù–µ–ø–ª–æ—Ö–æ!"},
            4: {"win": False, "prize": 0, "message": "üé≥ 4 –∫–µ–≥–ª–∏... –•–æ—Ä–æ—à–∏–π –±—Ä–æ—Å–æ–∫!"},
            5: {"win": False, "prize": 0, "message": "üé≥ 5 –∫–µ–≥–ª–µ–π... –ü–æ—á—Ç–∏ —Å—Ç—Ä–∞–π–∫!"},
            6: {"win": True, "prize": 15, "message": "üé≥ –°–¢–†–ê–ô–ö! –í—ã–∏–≥—Ä—ã—à: 15 –∑–≤–µ–∑–¥"}
        }
    },
    "‚öΩ": {
        "cost": 5,
        "values": {
            # –§—É—Ç–±–æ–ª: 1-5, –≥–¥–µ 5 - –≥–æ–ª
            1: {"win": False, "prize": 0, "message": "‚öΩ –ú—è—á —É—à–µ–ª –≤ –∞—É—Ç..."},
            2: {"win": False, "prize": 0, "message": "‚öΩ –£–¥–∞—Ä –ø–æ —à—Ç–∞–Ω–≥–µ!"},
            3: {"win": False, "prize": 0, "message": "‚öΩ –ú—è—á –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∑–∞—â–∏—Ç–Ω–∏–∫–æ–º!"},
            4: {"win": False, "prize": 0, "message": "‚öΩ –í—Ä–∞—Ç–∞—Ä—å –ø–∞—Ä–∏—Ä–æ–≤–∞–ª —É–¥–∞—Ä!"},
            5: {"win": True, "prize": 15, "message": "‚öΩ –ì–û–û–û–õ! –í—ã–∏–≥—Ä—ã—à: 15 –∑–≤–µ–∑–¥"}
        }
    },
    "üèÄ": {
        "cost": 5,
        "values": {
            # –ë–∞—Å–∫–µ—Ç–±–æ–ª: 1-5, –≥–¥–µ 5 - –ø–æ–ø–∞–¥–∞–Ω–∏–µ
            1: {"win": False, "prize": 0, "message": "üèÄ –ü—Ä–æ–º–∞—Ö... –ú–∏–º–æ –∫–æ–ª—å—Ü–∞!"},
            2: {"win": False, "prize": 0, "message": "üèÄ –ú—è—á –∑–∞–¥–µ–ª –æ–±–æ–¥!"},
            3: {"win": False, "prize": 0, "message": "üèÄ –ö–æ–ª–µ–±–∞–ª—Å—è –Ω–∞ –æ–±–æ–¥–µ –∏ –≤—ã–ª–µ—Ç–µ–ª!"},
            4: {"win": False, "prize": 0, "message": "üèÄ –ü–æ—á—Ç–∏ –ø–æ–ø–∞–ª!"},
            5: {"win": True, "prize": 15, "message": "üèÄ –ü–û–ü–ê–î–ê–ù–ò–ï! –í—ã–∏–≥—Ä—ã—à: 15 –∑–≤–µ–∑–¥"}
        }
    }
}

# üóÉÔ∏è –ë–ê–ó–ê –î–ê–ù–ù–´–•
user_data = defaultdict(lambda: {
    'game_balance': 100,  # –°—Ç–∞—Ä—Ç–æ–≤—ã–π –±–∞–ª–∞–Ω—Å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    'total_games': 0,
    'total_wins': 0,
    'last_activity': datetime.datetime.now().isoformat()
})

# üíæ –°–û–•–†–ê–ù–ï–ù–ò–ï –î–ê–ù–ù–´–•
def save_data():
    try:
        with open('game_data.json', 'w') as f:
            json.dump(dict(user_data), f, indent=2)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")

def load_data():
    try:
        with open('game_data.json', 'r') as f:
            data = json.load(f)
            user_data.update(data)
    except FileNotFoundError:
        pass

# üë§ –û–°–ù–û–í–ù–´–ï –ö–û–ú–ê–ù–î–´
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üéÆ –ò–ì–†–û–í–û–ô –ë–û–¢ –° –ü–û–õ–ù–û–ô –°–ò–°–¢–ï–ú–û–ô\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–≥—Ä—ã (5 –∑–≤–µ–∑–¥ –∑–∞ –ø–æ–ø—ã—Ç–∫—É):\n"
        "üé∞ –°–ª–æ—Ç—ã - 64 –≤–∞—Ä–∏–∞–Ω—Ç–∞, 4 –≤—ã–∏–≥—Ä—ã—à–Ω—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏\n"
        "üéØ –î–∞—Ä—Ç—Å - 6 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –ø–æ–±–µ–¥–∞ –Ω–∞ 6\n"  
        "üé≤ –ö—É–±–∏–∫ - 6 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –ø–æ–±–µ–¥–∞ –Ω–∞ 6\n"
        "üé≥ –ë–æ—É–ª–∏–Ω–≥ - 6 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –ø–æ–±–µ–¥–∞ –Ω–∞ 6\n"
        "‚öΩ –§—É—Ç–±–æ–ª - 5 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –ø–æ–±–µ–¥–∞ –Ω–∞ 5\n"
        "üèÄ –ë–∞—Å–∫–µ—Ç–±–æ–ª - 5 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –ø–æ–±–µ–¥–∞ –Ω–∞ 5\n\n"
        "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —ç–º–æ–¥–∑–∏ –∏–≥—Ä—ã –≤ —á–∞—Ç!\n\n"
        "–ö–æ–º–∞–Ω–¥—ã:\n"
        "/balance - –ú–æ–π –±–∞–ª–∞–Ω—Å\n"
        "/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n"
        "/games - –°–ø–∏—Å–æ–∫ –∏–≥—Ä"
    )

async def balance_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    data = user_data[user_id]
    
    await update.message.reply_text(
        f"üíé –í–∞—à –±–∞–ª–∞–Ω—Å: {data['game_balance']} –∑–≤–µ–∑–¥\n"
        f"üéÆ –í—Å–µ–≥–æ –∏–≥—Ä: {data['total_games']}\n"
        f"üèÜ –ü–æ–±–µ–¥: {data['total_wins']}\n"
        f"üìà –í–∏–Ω—Ä–µ–π—Ç: {(data['total_wins'] / data['total_games'] * 100) if data['total_games'] > 0 else 0:.1f}%"
    )

async def stats_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    data = user_data[user_id]
    
    stats_text = f"""
üìä –í–ê–®–ê –°–¢–ê–¢–ò–°–¢–ò–ö–ê

üíé –ë–∞–ª–∞–Ω—Å: {data['game_balance']} –∑–≤–µ–∑–¥
üéÆ –í—Å–µ–≥–æ –∏–≥—Ä: {data['total_games']}
üèÜ –ü–æ–±–µ–¥: {data['total_wins']}
üìà –í–∏–Ω—Ä–µ–π—Ç: {(data['total_wins'] / data['total_games'] * 100) if data['total_games'] > 0 else 0:.1f}%
üïí –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {data['last_activity'][11:16]}
    """
    
    await update.message.reply_text(stats_text)

async def games_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    games_text = """
üéÆ –î–û–°–¢–£–ü–ù–´–ï –ò–ì–†–´

üé∞ –°–ª–æ—Ç—ã (5 –∑–≤–µ–∑–¥)
‚Ä¢ 64 —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∞–Ω–∏–º–∞—Ü–∏–∏
‚Ä¢ 4 –≤—ã–∏–≥—Ä—ã—à–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏:
  - –¢–†–ò –ë–ê–†–ê (15 –∑–≤–µ–∑–¥)
  - –¢–†–ò –í–ò–®–ù–ò (25 –∑–≤–µ–∑–¥) 
  - –¢–†–ò –õ–ò–ú–û–ù–ê (50 –∑–≤–µ–∑–¥)
  - –î–ñ–ï–ö–ü–û–¢ 777 (100 –∑–≤–µ–∑–¥)

üéØ –î–∞—Ä—Ç—Å (5 –∑–≤–µ–∑–¥)
‚Ä¢ 6 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –±—Ä–æ—Å–∫–∞
‚Ä¢ –ü–æ–±–µ–¥–∞ –ø—Ä–∏ 6: 15 –∑–≤–µ–∑–¥

üé≤ –ö—É–±–∏–∫ (5 –∑–≤–µ–∑–¥)  
‚Ä¢ 6 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –±—Ä–æ—Å–∫–∞
‚Ä¢ –ü–æ–±–µ–¥–∞ –ø—Ä–∏ 6: 15 –∑–≤–µ–∑–¥

üé≥ –ë–æ—É–ª–∏–Ω–≥ (5 –∑–≤–µ–∑–¥)
‚Ä¢ 6 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –±—Ä–æ—Å–∫–∞
‚Ä¢ –ü–æ–±–µ–¥–∞ –ø—Ä–∏ 6: 15 –∑–≤–µ–∑–¥

‚öΩ –§—É—Ç–±–æ–ª (5 –∑–≤–µ–∑–¥)
‚Ä¢ 5 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –±—Ä–æ—Å–∫–∞
‚Ä¢ –ü–æ–±–µ–¥–∞ –ø—Ä–∏ 5: 15 –∑–≤–µ–∑–¥

üèÄ –ë–∞—Å–∫–µ—Ç–±–æ–ª (5 –∑–≤–µ–∑–¥)
‚Ä¢ 5 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –±—Ä–æ—Å–∫–∞
‚Ä¢ –ü–æ–±–µ–¥–∞ –ø—Ä–∏ 5: 15 –∑–≤–µ–∑–¥

–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —ç–º–æ–¥–∑–∏ –∏–≥—Ä—ã –≤ —á–∞—Ç!
    """
    
    await update.message.reply_text(games_text)

# üéÆ –û–ë–†–ê–ë–û–¢–ö–ê –ò–ì–†–û–í–´–• –°–û–û–ë–©–ï–ù–ò–ô
async def handle_game_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    emoji = update.message.text
    
    if emoji not in GAMES_CONFIG:
        return
    
    game_config = GAMES_CONFIG[emoji]
    
    # –ü–†–û–í–ï–†–ö–ê –ë–ê–õ–ê–ù–°–ê
    if user_data[user_id]['game_balance'] < game_config["cost"]:
        await update.message.reply_text(
            f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!\n\n"
            f"üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {user_data[user_id]['game_balance']} –∑–≤–µ–∑–¥\n"
            f"üéØ –¢—Ä–µ–±—É–µ—Ç—Å—è: {game_config['cost']} –∑–≤–µ–∑–¥\n\n"
            "–ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å —á—Ç–æ–±—ã –∏–≥—Ä–∞—Ç—å!"
        )
        return
    
    # –°–ü–ò–°–ê–ù–ò–ï –°–†–ï–î–°–¢–í
    user_data[user_id]['game_balance'] -= game_config["cost"]
    user_data[user_id]['total_games'] += 1
    user_data[user_id]['last_activity'] = datetime.datetime.now().isoformat()
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–≥—Ä–µ
    context.user_data['expecting_dice'] = True
    context.user_data['last_game_emoji'] = emoji
    context.user_data['last_game_user_id'] = user_id
    context.user_data['last_game_cost'] = game_config["cost"]
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º dice
    dice_message = await context.bot.send_dice(chat_id=update.message.chat_id, emoji=emoji)
    context.user_data['last_dice_message_id'] = dice_message.message_id
    
    # –°–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ –∏–≥—Ä—ã
    await update.message.reply_text(
        f"üéÆ –ó–∞–ø—É—Å–∫–∞–µ–º {emoji}...\n"
        f"üí∏ –°–ø–∏—Å–∞–Ω–æ: {game_config['cost']} –∑–≤–µ–∑–¥\n"
        f"üí∞ –û—Å—Ç–∞—Ç–æ–∫: {user_data[user_id]['game_balance']} –∑–≤–µ–∑–¥"
    )
    
    save_data()

# üéØ –û–ë–†–ê–ë–û–¢–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í DICE - –ü–û–õ–ù–ê–Ø –°–ò–°–¢–ï–ú–ê
async def handle_dice_result(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = update.message
    user_id = message.from_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞—à–µ–π –∏–≥—Ä—ã
    if not message.dice:
        return
    
    if not context.user_data.get('expecting_dice', False):
        return
        
    if context.user_data.get('last_game_user_id') != user_id:
        return
    
    emoji = message.dice.emoji
    value = message.dice.value
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    user_data[user_id]['last_activity'] = datetime.datetime.now().isoformat()
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥ –∏–≥—Ä—ã
    game_config = GAMES_CONFIG.get(emoji)
    if not game_config:
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è —ç—Ç–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
    result_config = game_config["values"].get(value)
    if not result_config:
        # –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, —Å—á–∏—Ç–∞–µ–º –ø—Ä–æ–∏–≥—Ä—ã—à–µ–º
        result_config = {"win": False, "prize": 0, "message": f"{emoji} –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç..."}
    
    # –û–ë–†–ê–ë–û–¢–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–ê
    result_text = ""
    
    if result_config["win"]:
        # –í–´–ò–ì–†–´–®
        win_amount = result_config["prize"]
        user_data[user_id]['game_balance'] += win_amount
        user_data[user_id]['total_wins'] += 1
        
        result_text = (
            f"üéâ {result_config['message']}\n\n"
            f"üíé –ò—Ç–æ–≥–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {user_data[user_id]['game_balance']} –∑–≤–µ–∑–¥\n"
            f"üìä (–°–ø–∏—Å–∞–Ω–æ: {context.user_data['last_game_cost']} –∑–≤–µ–∑–¥ + –í—ã–∏–≥—Ä—ã—à: {win_amount} –∑–≤–µ–∑–¥)"
        )
    else:
        # –ü–†–û–ò–ì–†–´–®
        result_text = (
            f"üò¢ {result_config['message']}\n\n"
            f"üíé –ò—Ç–æ–≥–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {user_data[user_id]['game_balance']} –∑–≤–µ–∑–¥\n"
            f"üìä (–°–ø–∏—Å–∞–Ω–æ: {context.user_data['last_game_cost']} –∑–≤–µ–∑–¥)"
        )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    await message.reply_text(result_text)
    
    # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä—ã
    context.user_data.pop('expecting_dice', None)
    context.user_data.pop('last_game_emoji', None)
    context.user_data.pop('last_dice_message_id', None)
    context.user_data.pop('last_game_user_id', None)
    context.user_data.pop('last_game_cost', None)
    
    save_data()

# üåê FLASK –î–õ–Ø RAILWAY
app = Flask(__name__)

@app.route('/')
def home():
    return "üéÆ Game Bot - –ü–æ–ª–Ω–∞—è –∏–≥—Ä–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞!"

def run_flask():
    port = int(os.environ.get("PORT", 5000))
    app.run(host='0.0.0.0', port=port)

# üöÄ –ó–ê–ü–£–°–ö –ë–û–¢–ê
def main():
    load_data()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    flask_thread = Thread(target=run_flask)
    flask_thread.daemon = True
    flask_thread.start()
    
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –ö–û–ú–ê–ù–î–´
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("balance", balance_command))
    application.add_handler(CommandHandler("stats", stats_command))
    application.add_handler(CommandHandler("games", games_command))
    
    # –°–û–û–ë–©–ï–ù–ò–Ø
    application.add_handler(MessageHandler(filters.TEXT & filters.Regex("^(üé∞|üéØ|üé≤|üé≥|‚öΩ|üèÄ)$"), handle_game_message))
    application.add_handler(MessageHandler(filters.Dice.ALL, handle_dice_result))
    
    print("üéÆ Game Bot –∑–∞–ø—É—â–µ–Ω!")
    print("üéØ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–≥—Ä—ã: üé∞ üéØ üé≤ üé≥ ‚öΩ üèÄ")
    application.run_polling()

if __name__ == '__main__':
    main()
